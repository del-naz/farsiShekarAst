{"version":3,"sources":["Dictionary.js","Header.js","Home.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["relatedLabel","detailsLabel","ListItem","_ref","item","classes","react_default","a","createElement","className","listItem","Typography_default","component","style","padding","title","description","related","details","Dictionary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSearch","event","target","value","length","setState","searchItem","items","getSearchItems","selectedAlphabet","handleSelect","getSelectItems","str","_this$props","master","found","forEach","list","data","foundItems","filter","l","indexOf","concat","map","alpha","_this$props2","find","index","getBar","selected","_this$props3","Button_default","key","alphaButton","variant","size","color","onClick","handleClearSearch","state","_this$state","root","Input_default","placeholder","onChange","bind","maxWidth","endAdornment","InputAdornment_default","position","IconButton_default","aria-label","Close_default","alphaContainer","listContainer","Component","withStyles","width","flexGrow","display","flexDirection","justifyContent","flexFlow","marginTop","borderBottom","margin","minWidth","maxHeight","Header","selectedTab","handleTabChange","AppBar_default","Toolbar_default","mainTitle","Tabs_default","direction","flex","Tab_default","label","grow","marginLeft","alphaBar","require","TabContainer","children","Home","e","ready","src_Header","Paper_default","appBody","src_Dictionary","minHeight","theme","createMuiTheme","palette","type","typography","fontSize","htmlFontSize","primary","light","main","dark","contrastText","secondary","overrides","MuiTooltip","tooltip","backgroundColor","fontWeight","tooltipPlacementLeft","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","MuiSwitch","switchBase","height","App","styles","src_Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3a91d6e7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Delete from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst relatedLabel = \"واژه های مربوط\"\nconst detailsLabel = \"توضیح/مثال\"\n\nconst styles = {\n  root: {\n    width: '100%',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  alphaContainer: {\n    display: 'flex',\n    justifyContent:'flex-start',\n    flexFlow: 'wrap',\n    marginTop: '1em'\n  },\n  listContainer: {\n    display: 'flex',\n    justifyContent:'flex-start',\n    marginTop: '1em',\n    flexDirection: 'column'\n  },\n  listItem: {\n    borderBottom: '1px solid #cdcdcd'\n  },\n  alphaButton: {margin:1, padding:'.1em', minWidth: '2.5em', maxHeight: '2.5em'}\n};\n\nfunction ListItem({item, classes}) {\n  return (<div className={classes.listItem}>\n    <Typography component=\"div\" style={{ padding: 8 }}>\n      {item.title}: {item.description}\n    </Typography>\n    {item.related && <Typography component=\"div\" style={{ padding: 8 }}>\n        {relatedLabel}: {item.related}\n      </Typography> }\n    {item.details && <Typography component=\"div\" style={{ padding: 8 }}>\n      {detailsLabel}: {item.details}\n    </Typography>}\n  </div>);\n}\n\nclass Dictionary extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: null,\n      searchItem: '',\n      selectedAlphabet: ''\n    }\n  }\n  componentDidMount() {\n  }\n\n  handleSearch = event => {\n      if (event.target.value.length > 2) {\n        this.setState({\n          searchItem: event.target.value,\n          items: this.getSearchItems(event.target.value),\n          selectedAlphabet: null\n        })\n      } else {\n        this.setState({\n          searchItem: event.target.value,\n          items: null,\n          selectedAlphabet: null\n        })\n      }\n  }\n\n  handleSelect = selectedAlphabet => {\n    this.setState({\n      selectedAlphabet,\n      searchItem: '',\n      items: this.getSelectItems(selectedAlphabet)\n    })\n  }\n\n  getSearchItems = str => {\n    const {master, classes} = this.props\n    let found = []\n    master.forEach(item => {\n      const list = item.data\n      if (list) {\n        const foundItems = list.filter(l => l.title.indexOf(str) !== -1)\n        found = found.concat(foundItems)\n      }\n    })\n    return found.map(item => <ListItem item={item} classes={classes}/>)\n  }\n\n  getSelectItems = alpha => {\n    const {master, classes} = this.props\n    const list = master.find(l => l.index === alpha)\n    if (list && list.data) {\n      return list.data.map(item => <ListItem item={item} classes={classes}/>)\n    } else {\n      return []\n    }\n  }\n\n  getBar = selected => {\n    const {classes, master} = this.props\n\n    return master.map(item => <Button\n            key={item.index}\n            className={classes.alphaButton}\n            variant={item.index === selected ? 'contained' : 'outlined'}\n            size={'small'}\n            color={item.index === selected ? 'secondary' : 'primary'}\n            onClick={()=> this.handleSelect(item.index)}>\n            {item.value}\n        </Button>\n      )\n  }\n\n  handleClearSearch = () => {\n    this.setState({searchItem: ''})\n  }\n\n  render() {\n    const {classes} = this.props,\n          {searchItem, selectedAlphabet, items} = this.state\n    return (\n        <div className={classes.root}>\n          <Input\n          placeholder='جستجوی واژه'\n          onChange={this.handleSearch.bind(this)}\n          value={searchItem}\n          style={{maxWidth: 300}}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                aria-label=\"Clear\"\n                onClick={this.handleClearSearch.bind(this)}\n              >\n                {this.state.searchItem ? <Delete /> : null}\n              </IconButton>\n            </InputAdornment>\n          }\n          />\n          <div className={classes.alphaContainer}>\n          {this.getBar(selectedAlphabet)}\n          </div>\n          <div className={classes.listContainer}>\n          {items}\n          </div>\n        </div>\n    )\n  }\n}\nexport default withStyles(styles)(Dictionary)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst styles = {\n  grow: {\n    flexGrow: 1,\n  },\n  mainTitle: {\n    marginLeft: 32,\n  },\n};\n\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      items: null\n    }\n  }\n  componentDidMount() {\n  }\n  render() {\n    const {classes, selectedTab, handleTabChange} = this.props\n    return (\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h4\" color=\"inherit\" className={classes.mainTitle}>\n              فارسی شكر است\n            </Typography>\n            <Tabs style={{direction: 'rtl', flex:1, justifyContent: 'center'}} value={selectedTab} onChange={handleTabChange}>\n              <Tab label=\"واژه نامه\" />\n              <Tab label=\"پژوهش\" />\n              <Tab label=\"مقالات\" />\n            </Tabs>\n          </Toolbar>\n        </AppBar>\n    )\n  }\n}\nexport default withStyles(styles)(Header)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Dictionary from './Dictionary';\nimport Header from './Header';\nconst alphaBar = require('./data/alphaBar');\n\n\nconst styles = {\n  root: {\n    width: '100%',\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  appBody: {\n    flex: 1,\n    minHeight: 400,\n    padding: '2em'\n  }\n};\nfunction TabContainer(props) {\n  return (\n    <div>\n    <Typography component=\"div\" variant='h4'>\n      {props.title}\n    </Typography>\n    <Typography component=\"p\">\n      {props.children}\n    </Typography>\n    </div>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedTab: 0,\n      ready: false\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  handleTabChange = (e, selectedTab) => {\n      this.setState({selectedTab})\n  }\n  render() {\n    const {classes} = this.props,\n          {selectedTab} = this.state\n    return (\n        <div className={classes.root}>\n        <Header selectedTab={this.state.selectedTab} handleTabChange={this.handleTabChange}/>\n        <Paper className={classes.appBody}>\n        {selectedTab === 0 && <Dictionary master={alphaBar}/>}\n        {selectedTab === 1 && <TabContainer title={'پژوهش'}>Item Two</TabContainer>}\n        {selectedTab === 2 && <TabContainer title={'مقالات'}>Item Three</TabContainer>}\n        </Paper>\n        </div>\n    )\n  }\n}\nexport default withStyles(styles)(Home)\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport logo from './logo.svg';\nimport Home from './Home';\nimport {\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core/styles'\n\nconst primaryColor = \"#3F395A\"\nconst primaryLightColor = '#675d93'\nconst primaryDarkColor = '#302c44'\nconst secondaryColor = \"#D81B60\"\nconst secondaryLightColor = '#F06292'\nconst secondaryDarkColor = '#880E4F'\n\n// Setup for custom theme.\nconst theme = createMuiTheme({\n  direction: 'rtl',\n  palette: {\n    type: 'light',\n    typography: {\n      fontSize: 10,\n      htmlFontSize: 10\n    },\n    primary: {\n      light: primaryLightColor,\n      main: primaryColor,\n      dark: primaryDarkColor,\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: secondaryLightColor,\n      main: secondaryColor,\n      dark: secondaryDarkColor,\n      contrastText: '#fff',\n    }\n  },\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: primaryDarkColor,\n        fontWeight: 400,\n        fontSize: '.9em',\n        maxWidth: 300,\n      },\n      tooltipPlacementLeft: {\n        margin: '0 12px'\n      },\n      tooltipPlacementRight: {\n        margin: '0 12px'\n      },\n      tooltipPlacementTop: {\n        margin: '12px 0'\n      },\n      tooltipPlacementBottom: {\n        margin: '12px 0'\n      }\n    },\n    MuiSwitch: {\n      switchBase: {\n        height: 32\n      }\n    }\n  }\n})\n\nclass App extends Component {\n  render() {\n    const {classes} = this.props\n    return (\n      <MuiThemeProvider theme={theme}>\n      <Home/>\n      </MuiThemeProvider >\n    )\n  }\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}